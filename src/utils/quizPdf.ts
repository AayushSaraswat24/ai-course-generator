import jsPDF from "jspdf";
import "jspdf-autotable";

type QuizQuestion = {
  question: string;
  options: string[];
  correctAnswer: number;
  explanation: string;
};

function capitalizeTitle(title: string) {
  return title ? title.charAt(0).toUpperCase() + title.slice(1) : "";
}

export function generateQuizPdf(questions: QuizQuestion[], mainTopic?: string) {
  const doc = new jsPDF();
  const pageWidth = doc.internal.pageSize.getWidth();
  const pageHeight = doc.internal.pageSize.getHeight();
  const bottomMargin = 20;

  doc.setFont("helvetica", "bold");
  doc.setFontSize(22);
  doc.setTextColor(110, 0, 160);
  doc.text("CourGen", 14, 20);


  doc.setFont("times", "italic");
  doc.setFontSize(11);
  doc.setTextColor(90, 90, 90);
  doc.text("High-quality AI-generated quizzes, tailored for learners.", 14, 28);


  doc.setFont("times", "bold");
  doc.setFontSize(20);
  doc.setTextColor(0, 0, 0);
  const capitalizedTitle = capitalizeTitle(mainTopic || "CourGen");
  doc.text(capitalizedTitle, pageWidth / 2, 45, { align: "center" });

  let y = 60;

 
  questions.forEach((q, index) => {
    if (y > pageHeight - bottomMargin) {
      doc.addPage();
      y = 20;
    }

    
    doc.setFont("times", "bold");
    doc.setFontSize(14);
    doc.setTextColor(30, 30, 120);

    const wrappedQuestion = doc.splitTextToSize(
      `${index + 1}. ${q.question}`,
      pageWidth - 28
    );
    doc.text(wrappedQuestion, 14, y);
    y += wrappedQuestion.length * 7;

  
    doc.setFont("times", "normal");
    doc.setFontSize(13);
    doc.setTextColor(40, 40, 40);

    q.options.forEach((opt, i) => {
      if (y > pageHeight - bottomMargin) {
        doc.addPage();
        y = 20;
      }
      const optionLabel = String.fromCharCode(65 + i); // A, B, C, ...
      const wrappedOption = doc.splitTextToSize(`${optionLabel}. ${opt}`, pageWidth - 35);
      doc.text(wrappedOption, 20, y);
      y += wrappedOption.length * 6.5;
    });

    y += 10;
  });


  doc.addPage();
  doc.setFont("times", "bold");
  doc.setFontSize(18);
  doc.setTextColor(110, 0, 160);
  doc.text("Answers & Explanations", pageWidth / 2, 30, { align: "center" });

  y = 50;

  questions.forEach((q, index) => {
    if (y > pageHeight - bottomMargin) {
      doc.addPage();
      y = 20;
    }

  
    doc.setFont("times", "bold");
    doc.setFontSize(13);
    doc.setTextColor(0, 0, 0);
    doc.text(`${index + 1}.`, 14, y);
    y += 7;

    
    doc.setFont("times", "bold");
    doc.setFontSize(12);
    doc.setTextColor(0, 100, 0);
    doc.text(
      `✔ Correct Answer: ${String.fromCharCode(65 + q.correctAnswer)}`,
      20,
      y
    );
    y += 7;

  
    if (q.explanation) {
      doc.setFont("times", "italic");
      doc.setFontSize(12);
      doc.setTextColor(80, 80, 80);

      const splitExp = doc.splitTextToSize(q.explanation, pageWidth - 28);
      splitExp.forEach((line: string) => {
        if (y > pageHeight - bottomMargin) {
          doc.addPage();
          y = 20;
        }
        doc.text(line, 20, y);
        y += 6;
      });
    }

    y += 10;
  });

 
  const pageCount = (doc.internal as any).getNumberOfPages();
  for (let i = 1; i <= pageCount; i++) {
    doc.setPage(i);
    doc.setFont("times", "italic");
    doc.setFontSize(10);
    doc.setTextColor(140, 140, 140);
    doc.text(
      `Generated by CourGen · Page ${i} of ${pageCount}`,
      pageWidth / 2,
      pageHeight - 10,
      { align: "center" }
    );
  }


  const fileName = mainTopic
    ? `${capitalizeTitle(mainTopic)}_CourgenQuiz.pdf`
    : "CourGen_Quiz.pdf";

  doc.save(fileName);
}
