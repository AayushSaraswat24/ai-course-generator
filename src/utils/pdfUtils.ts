import jsPDF from "jspdf";
import "jspdf-autotable";

type NoteChunk = { topic: string; notes: string };
type YTVideo = { title: string; video: { url: string; title: string; thumbnail: string } | null };

// ✅ Capitalize helper
function capitalizeTitle(title: string) {
  return title ? title.charAt(0).toUpperCase() + title.slice(1) : "";
}

export function generatePdf(
  mainTopic: string,
  notesChunks: NoteChunk[],
  ytVideos?: YTVideo[]
) {
  const doc = new jsPDF();
  const pageWidth = doc.internal.pageSize.getWidth();
  const pageHeight = doc.internal.pageSize.getHeight();
  const bottomMargin = 20; // ✅ padding at bottom

  // ===== CourGen Logo =====
  doc.setFont("helvetica", "bold");
  doc.setFontSize(22);
  doc.setTextColor(110, 0, 160); // purple, but softer
  doc.text("CourGen", 14, 20);

  // ===== Subline under logo =====
  doc.setFont("times", "italic");
  doc.setFontSize(11);
  doc.setTextColor(90, 90, 90);
  doc.text("High-quality AI-generated notes, tailored for learners.", 14, 28);

  // ===== Main Title =====
  doc.setFont("times", "bold");
  doc.setFontSize(20);
  doc.setTextColor(0, 0, 0);
  const capitalizedTitle = capitalizeTitle(mainTopic || "AI Notes");
  doc.text(capitalizedTitle, pageWidth / 2, 45, { align: "center" });

  let y = 60;

  // ===== Notes Section =====
  notesChunks.forEach((chunk) => {
    if (y > pageHeight - bottomMargin) {
      doc.addPage();
      y = 20;
    }

    doc.setFont("times", "bold");
    doc.setFontSize(15);
    doc.setTextColor(30, 30, 120);
    doc.text(chunk.topic, 14, y);

    y += 8;

    doc.setFont("times", "normal");
    doc.setFontSize(13);
    doc.setTextColor(40, 40, 40);

    const splitNotes = doc.splitTextToSize(chunk.notes, pageWidth - 28);
    splitNotes.forEach((line:string) => {
      if (y > pageHeight - bottomMargin) {
        doc.addPage();
        y = 20;
      }
      doc.text(line, 14, y);
      y += 7; // line spacing
    });

    y += 10; // gap between sections
  });

  // ===== Videos Section (Optional) =====
  if (ytVideos && ytVideos.length > 0) {
    if (y > pageHeight - bottomMargin) {
      doc.addPage();
      y = 20;
    }

    doc.setFont("times", "bold");
    doc.setFontSize(16);
    doc.setTextColor(0, 100, 0);
    doc.text("Recommended Videos", 14, y);
    y += 12;

    ytVideos.forEach((video) => {
      if (y > pageHeight - bottomMargin) {
        doc.addPage();
        y = 20;
      }

      if (video.video) {
        doc.setFont("times", "bold");
        doc.setFontSize(13);
        doc.setTextColor(0, 0, 0);
        doc.text(video.video.title, 14, y);
        y += 7;

        doc.setFont("times", "normal");
        doc.setFontSize(12);
        doc.setTextColor(0, 0, 200);
        doc.textWithLink(video.video.url, 14, y, { url: video.video.url });
        y += 12;
      }
    });
  }

  // ===== Footer with page numbers =====
  const pageCount = (doc.internal as any).getNumberOfPages();
  for (let i = 1; i <= pageCount; i++) {
    doc.setPage(i);
    doc.setFont("times", "italic");
    doc.setFontSize(10);
    doc.setTextColor(140, 140, 140);
    doc.text(
      `Generated by CourGen · Page ${i} of ${pageCount}`,
      pageWidth / 2,
      pageHeight - 10,
      { align: "center" }
    );
  }

  doc.save(`${capitalizedTitle}.pdf`);
}
